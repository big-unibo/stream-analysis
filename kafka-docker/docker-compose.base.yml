version: "3.9"
services:
  orion:
    init: true
    restart: always
    image: fiware/orion:3.12.0
    hostname: orion 
    container_name: orion
    depends_on:
      - mongodb
    ports:
      - "${ORION_PORT_EXT}:1026"
    command: -corsOrigin __ALL -dbhost mongodb -inReqPayloadMaxSize ${ORION_MAX_PAYLOAD}
    healthcheck:
      test: curl --fail -s http://127.0.0.1:1026/v2/entities?options=keyValues&limit=1
      interval: 5s
      timeout: 10s

  mongodb:
    init: true
    restart: always
    image: mongo:7.0
    hostname: mongodb
    container_name: mongodb
    ports:
      - "${MONGO_DB_PERS_PORT_EXT}:27017"
    healthcheck:
      test: |
        host=`hostname --ip-address || echo '127.0.0.1'`;
        mongo --quiet $${host}/test --eval 'quit(db.runCommand({ ping: 1 }).ok ? 0 : 2)' && echo 0 || echo 1
      interval: 5s
      timeout: 10s

  zookeeper:
    init: true
    hostname: zookeeper
    container_name: zookeeper
    image: wurstmeister/zookeeper
    ports:
      - ${ZOOKEEPER_PORT_EXT}:2181

  kafka:
    init: true
    hostname: kafka
    container_name: kafka
    image: docker.io/bitnami/kafka:3.7
    ports:
      - ${KAFKA_PORT_EXT}:49092
    environment:
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:49092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://${KAFKA_IP}:49092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: true
    depends_on:
      - zookeeper

  producer:
    build:
      context: ../  # Path to the directory containing producer Dockerfile
      dockerfile: DockerfileGenerator
    ports:
      - ${PRODUCER_PORT}:8080
    volumes:
      - ./logs/producer-data:/app/simulator/logs
      - ./logs:/app/logs
    depends_on:
      - kafka

  consumer:
    build:
      context: ../  # Path to the directory containing consumer Dockerfile
      dockerfile: DockerfileConsumer
    volumes:
      - ./logs/consumer-data:/app/dataconsumer/logs
      - ./logs:/app/logs
    ports:
      - ${CONSUMER_PORT}:8084
    depends_on:
      - kafka
